# function to read a data file
function_read_UPAS_data <- function(filepath) {
  data_parameter <- read_csv(file = filepath, col_names = T, n_max = 60)
  data_column_name      <- read_csv(file = filepath, col_names = T, skip_empty_rows = T, skip = 88,  n_max = 0)
  data_raw       <- read_csv(file = filepath, skip = 89, skip_empty_rows = T, col_names = T)
  colnames(data_raw) <- colnames(data_column_name)
  
  data <- data_raw %>%
    mutate(UPASserial = subset(data_parameter, PARAMETER == "UPASserial")$VALUE[1],
           SampleName = subset(data_parameter, PARAMETER == "SampleName")$VALUE[1],
           DutyCycle  = subset(data_parameter, PARAMETER == "FlowDutyCycle")$VALUE[1],
           compliance = ifelse((AccelXVar > 100) | (AccelYVar > 100) | (AccelZVar > 100), 1, 0))
  
  data$compliance_rollmean <- ifelse(as.numeric(rollapply(data$compliance, width=20,  FUN = mean, align = "center", na.rm = TRUE, partial=F, fill = NA)) > 0, 1, 0)
  
  return(data)
}



### function to plot all parameters for one session
function_UPAS_plotly_all_parameters <- function(df) {
  
  df$AccelX_SD <- ifelse(df$AccelXVar < 0, 0, sqrt(df$AccelXVar)/1000)
  df$AccelY_SD <- ifelse(df$AccelYVar < 0, 0, sqrt(df$AccelYVar)/1000)
  df$AccelZ_SD <- ifelse(df$AccelZVar < 0, 0, sqrt(df$AccelZVar)/1000)
  
  df_pm <- subset(df, abs(PM2_5MC)>=0)
  df_pm$PM2_5stdev <- sqrt(df_pm$PM2_5MCVar)
  
  run_hours <- round(nrow(df)/2/60, 1)
  wearing_hours <- round(sum(df$compliance_rollmean, na.rm=T)/2/60, 1)
  mean_pm25 <- round(mean(df$PM2_5MC, na.rm=T), 1)
  
  plot_pm <- plot_ly() %>%
    #add_trace(data = df_pm, x=~DateTimeLocal, y=~PM1MC,   type = "scatter", mode  = "lines", line = list(color ="gray"), name = "PM1 (ug/m3)", opacity=0.5)%>%            
    #add_trace(data = df_pm, x=~DateTimeLocal, y=~PM2_5MC - PM2_5stdev, 
    #          type = "scatter", mode  = "lines", line = list(color ="grey"), 
    #          name = "PM2.5 (ug/m3) - 1 stdev", opacity=0.8)%>%
    #add_trace(data = df_pm, x=~DateTimeLocal, y=~PM2_5MC + PM2_5stdev, 
    #          type = "scatter", mode  = "lines", line = list(color ="grey"), 
    #          name = "PM2.5 (ug/m3) + 1 stdev", opacity=0.8, fill="tonexty", fillcolor="grey")%>%
    #add_trace(data = df_pm, x=~DateTimeLocal, y=~PM4MC,   type = "scatter", mode  = "lines", line = list(color ="purple"), name = "PM4 (ug/m3)", opacity=0.5)%>%            
    #add_trace(data = df_pm, x=~DateTimeLocal, y=~PM10MC,  type = "scatter", mode  = "lines", line = list(color ="red"), name = "PM10 (ug/m3)", opacity=0.5)%>%            
    #add_trace(data = df_pm, x=~DateTimeLocal, y=~PM1MCVar,   type = "scatter", mode  = "lines", line = list(color ="gray"), name = "PM1 Variance (ug/m3)", opacity=0.5)%>%            
    add_trace(data = df_pm, x=~DateTimeLocal, y=~PM2_5MC, 
              type = "scatter", mode  = "lines", line = list(color ="black"), 
              name = "PM2.5 (ug/m3)", opacity=0.8)%>%            
    #add_trace(data = df_pm, x=~DateTimeLocal, y=~PM4MCVar,   type = "scatter", mode  = "lines", line = list(color ="purple"), name = "PM4 Variance (ug/m3)", opacity=0.5)%>%            
    #add_trace(data = df_pm, x=~DateTimeLocal, y=~PM10MCVar,  type = "scatter", mode  = "lines", line = list(color ="red"), name = "PM10 Variance (ug/m3)", opacity=0.5)%>%            
    layout(xaxis = list(tickangle = -0), 
           margin=list(l = 100),
           yaxis = list(title="PM", tickprefix="   "),
           showlegend = T, 
           font = list(size=16))
  
  plot_particlecount <- plot_ly() %>%
    #add_trace(data = df_pm, x=~DateTimeLocal, y=~PM0_5NC,   type = "scatter", mode  = "lines", line = list(color ="blue"), name = "PM0.5 #/cm3", opacity=0.5)%>%            
    #add_trace(data = df_pm, x=~DateTimeLocal, y=~PM1_NC,     type = "scatter", mode  = "lines", line = list(color ="gray"), name = "PM1 #/cm3", opacity=0.5)%>%            
    add_trace(data = df_pm, x=~DateTimeLocal, y=~PM2_5NC,   type = "scatter", mode  = "lines", line = list(color ="black"), name = "PM2.5 #/cm3", opacity=0.8)%>%            
    #add_trace(data = df_pm, x=~DateTimeLocal, y=~PM4NC,     type = "scatter", mode  = "lines", line = list(color ="purple"), name = "PM4 #/cm3", opacity=0.5)%>%            
    #add_trace(data = df_pm, x=~DateTimeLocal, y=~PM10NC,    type = "scatter", mode  = "lines", line = list(color ="red"), name = "PM10 #/cm3", opacity=0.5)%>%            
    layout(xaxis = list(tickangle = -0), 
           margin=list(l = 100),
           yaxis = list(title="counts", tickprefix="   "),
           showlegend = T, 
           font = list(size=16))
  
  plot_particlesize <- plot_ly() %>%
    add_trace(data = df_pm, x=~DateTimeLocal, y=~PMtypicalParticleSize,   type = "scatter", mode  = "lines", line = list(color ="green"), name = "PM typical particle size (um)", opacity=0.8)%>%            
    layout(xaxis = list(tickangle = -0), 
           margin=list(l = 100),
           yaxis = list(title="particle\nsize", tickprefix="   "),
           showlegend = T, 
           font = list(size=16))
  
  plot_filterdp <- plot_ly() %>%
    add_trace(data = df_pm, x=~DateTimeLocal, y=~FilterDP,   type = "scatter", mode  = "lines", 
              line = list(color ="black"), name = "filter DP", opacity=0.8)%>%            
    layout(xaxis = list(tickangle = -0), 
           margin=list(l = 100),
           yaxis = list(title="filter DP", tickprefix="   "),
           showlegend = T, 
           font = list(size=16))
  
  plot_flow_power <- plot_ly() %>%
    add_trace(data = df, x=~DateTimeLocal, y=~PumpingFlowRate,   type = "scatter", mode  = "lines", line = list(color ="black"), name = "Flow rate (Lpm)", opacity=0.8)%>%            
    #add_trace(data = df, x=~DateTimeLocal, y=~MassFlow,   type = "scatter", mode  = "lines", line = list(color ="blue"), name = "Mass Flow (g/m)", opacity=0.5)%>%            
    #add_trace(data = df, x=~DateTimeLocal, y=~PumpV/10,   type = "scatter", mode  = "lines", line = list(color ="purple"), name = "Pump Voltage (V)/10", opacity=0.5)%>%            
    add_trace(data = df, x=~DateTimeLocal, y=~as.numeric(BatteryCharge)/100,   type = "scatter", mode  = "lines", line = list(color ="red"), name = "Battery (%)/100", opacity=0.8)%>%            
    layout(xaxis = list(tickangle = -0), 
           margin=list(l = 100),
           yaxis = list(title="Flow\n&\nBattery", tickprefix="   "),
           showlegend = T, 
           font = list(size=16))
  
  plot_temp_rh <- plot_ly() %>%
    add_trace(data = df, x=~DateTimeLocal, y=~AtmoT,    type = "scatter", mode  = "lines", line = list(color ="green"), name = "Atmosphere Temp (C)", opacity=0.8)%>%            
    add_trace(data = df, x=~DateTimeLocal, y=~AtmoRH,    type = "scatter", mode  = "lines", line = list(color ="blue"), name = "Atmosphere RH (%)", opacity=0.8)%>%            
    #add_trace(data = df, x=~DateTimeLocal, y=~AtmoDensity*10,   type = "scatter", mode  = "lines", line = list(color ="blue"), name = "10 * Air Density (g/L)", opacity=0.5)%>%            
    layout(xaxis = list(tickangle = -0), 
           margin=list(l = 100),
           yaxis = list(title="Temp\n&\nRH", tickprefix="   "),
           showlegend = T, 
           font = list(size=16))
  
  #plot_pressure <- plot_ly() %>%
  #  add_trace(data = df, x=~DateTimeLocal, y=~PCBP,    type = "scatter", mode  = "lines", line = list(color ="green"), name = "PCB pressure (hPa)", opacity=0.5)%>%            
  #  add_trace(data = df, x=~DateTimeLocal, y=~PumpP,   type = "scatter", mode  = "lines", line = list(color ="red"), name = "Pump pressure (hPa)", opacity=0.5)%>%            
  #  add_trace(data = df, x=~DateTimeLocal, y=~FdPdP,    type = "scatter", mode  = "lines", line = list(color ="black"), name = "differential pressure across filter (Pa)", opacity=0.5)%>%            
  #  add_trace(data = df, x=~DateTimeLocal, y=~Alt,   type = "scatter", mode  = "lines", line = list(color ="blue"), name = "Alt (m)", opacity=0.5)%>%            
  #  layout(xaxis = list(tickangle = -0), 
  #         margin=list(l = 100),
  #         yaxis = list(title="Pressure", tickprefix="   "),
  #         showlegend = T, 
  #         font = list(size=16))
  
  
  plot_light <- plot_ly() %>%
    add_trace(data = df, x=~DateTimeLocal, y=~LUX/1000,    type = "scatter", mode  = "lines", line = list(color ="black"), name = "LUX/1000", opacity=0.5)%>%            
    #add_trace(data = df, x=~DateTimeLocal, y=~UVindex,   type = "scatter", mode  = "lines", line = list(color ="purple"), name = "UV index", opacity=0.5)%>%            
    layout(xaxis = list(tickangle = -0), 
           margin=list(l = 100),
           yaxis = list(title="light", tickprefix="   "),
           showlegend = T, 
           font = list(size=16))
  
  #df$vector_sum_XYZ <- sqrt((df$AccelX)^2 + (df$AccelY)^2 + (df$AccelZ)^2)
  plot_activity <- plot_ly() %>%
    add_trace(data = df, x=~DateTimeLocal, y=~AccelX/1000,    type = "scatter", mode  = "lines", line = list(color ="red"), name = "Accel-X (g)", opacity=0.8)%>%            
    add_trace(data = df, x=~DateTimeLocal, y=~AccelY/1000,    type = "scatter", mode  = "lines", line = list(color ="darkgreen"), name = "Accel-Y (g)", opacity=0.8)%>%            
    add_trace(data = df, x=~DateTimeLocal, y=~AccelZ/1000,    type = "scatter", mode  = "lines", line = list(color ="blue"), name = "Accel-Z (g)", opacity=0.8)%>%            
    
    add_trace(data = df, x=~DateTimeLocal, y=~compliance,    type = "scatter", mode  = "lines", line = list(color ="black"), name = "compliance", opacity=0.8)%>%            
    add_trace(data = df, x=~DateTimeLocal, y=~compliance_rollmean,    type = "scatter", mode  = "lines", line = list(color ="purple"), name = "compliance rollmean", opacity=0.8)%>%            
    #add_trace(data = df, x=~DateTimeLocal, y=~vector_sum_XYZ/1000,   type = "scatter", mode  = "lines", line = list(color ="black"), name = "Vector sum XYZ (g)", opacity=0.8)%>%            
    add_trace(data = df, x=~DateTimeLocal, y=~AccelX_SD,    type = "scatter", mode  = "lines", line = list(color ="pink"), name = "Accel-X SD (g)", opacity=0.8)%>%            
    add_trace(data = df, x=~DateTimeLocal, y=~AccelY_SD,    type = "scatter", mode  = "lines", line = list(color ="lightgreen"), name = "Accel-Y SD (g)", opacity=0.8)%>%            
    add_trace(data = df, x=~DateTimeLocal, y=~AccelZ_SD,    type = "scatter", mode  = "lines", line = list(color ="lightblue"), name = "Accel-Z SD (g)", opacity=0.8)%>%            
    #add_trace(data = df, x=~DateTimeLocal, y=~StepCount/100,    type = "scatter", mode  = "lines", line = list(color ="purple", size = 2), name = "Step count/100", opacity=0.99)%>%            
    #add_trace(data = df, x=~DateTimeLocal, y=~GPSspeed,   type = "scatter", mode  = "lines", line = list(color ="gray"), name = "GPS speed (m/s)", opacity=0.5)%>%            
    layout(xaxis = list(tickangle = -0), 
           margin=list(l = 100),
           yaxis = list(title="Accele\nrometer", tickprefix="   "),
           showlegend = T, 
           font = list(size=16))
  
  title <- paste0("UPAS-", df$UPASserial[1], ", run hour = ", run_hours, ", wearing hour = ", 
                  wearing_hours, ", mean PM2.5 = ", mean_pm25, " ug/m3 ,", df[!is.na(df$unit_id), ]$unit_id[1])
  
  subplot(plot_pm,
          plot_particlecount,
          plot_particlesize,
          #plot_pressure,
          plot_filterdp,
          plot_temp_rh,
          plot_flow_power,
          plot_light,
          plot_activity,
          
          nrows = 8, 
          heights = c(0.25, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1), 
          #margin = c(0.04, 0.04, 0.04, 0.04), 
          shareX = T, 
          titleX = F, 
          titleY = T) %>% 
    layout(annotations = list(list(x = 0.5 , y = 1.02, text = title,
                                   font = list(size = 18, color = "black"), 
                                   showarrow = F, 
                                   xref='paper', yref='paper')),
           font = list(size=16)
    )
  
}
